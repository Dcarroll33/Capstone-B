-- MySQL Script generated by MySQL Workbench
-- 09/09/15 00:34:57
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema wateringhole
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema wateringhole
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `wateringhole` DEFAULT CHARACTER SET latin1 ;
USE `wateringhole` ;

-- -----------------------------------------------------
-- Table `wateringhole`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`users` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`users` (
  `idusers` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `userName` VARCHAR(45) NULL COMMENT '',
  `first_name` VARCHAR(45) NULL COMMENT '',
  `last_name` VARCHAR(45) NULL COMMENT '',
  `password` VARCHAR(45) NULL COMMENT '',
  `isOnline` TINYINT(1) NULL COMMENT '',
  `isBusy` TINYINT(1) NULL COMMENT '',
  `email` VARCHAR(45) NULL COMMENT '',
  `age` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idusers`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`likes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`likes` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`likes` (
  `idlikes` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `userId` INT NOT NULL COMMENT '',
  `description` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idlikes`)  COMMENT '',
  INDEX `idUsers_idx` (`userId` ASC)  COMMENT '',
  CONSTRAINT `idUsers`
    FOREIGN KEY (`userId`)
    REFERENCES `wateringhole`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`dislikes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`dislikes` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`dislikes` (
  `iddislikes` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `userId` INT NULL COMMENT '',
  `description` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`iddislikes`)  COMMENT '',
  INDEX `idUsers_idx` (`userId` ASC)  COMMENT '',
  CONSTRAINT `userId`
    FOREIGN KEY (`userId`)
    REFERENCES `wateringhole`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`userProfile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`userProfile` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`userProfile` (
  `iduserProfile` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `userId` INT NULL COMMENT '',
  `profileName` VARCHAR(45) NULL COMMENT '',
  `description` VARCHAR(45) NULL COMMENT '',
  `events` VARCHAR(45) NULL COMMENT '',
  `color` VARCHAR(45) NULL COMMENT '',
  `enableLocator` TINYINT(1) NULL COMMENT '',
  `users_idusers` INT NOT NULL COMMENT '',
  PRIMARY KEY (`iduserProfile`)  COMMENT '',
  INDEX `fk_userProfile_users1_idx` (`userId` ASC)  COMMENT '',
  CONSTRAINT `fk_userProfile_users1`
    FOREIGN KEY (`userId`)
    REFERENCES `wateringhole`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`permissions` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`permissions` (
  `idpermissions` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `permDescription` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idpermissions`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`grantedPermissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`grantedPermissions` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`grantedPermissions` (
  `idgrantedPermissions` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `userId` INT NULL COMMENT '',
  `appId` INT NULL COMMENT '',
  `permId` INT NULL COMMENT '',
  PRIMARY KEY (`idgrantedPermissions`)  COMMENT '',
  INDEX `userID_idx` (`userId` ASC)  COMMENT '',
  INDEX `fk_grantedPermissions_permissions1_idx` (`permId` ASC)  COMMENT '',
  CONSTRAINT `idusers_grant`
    FOREIGN KEY (`userId`)
    REFERENCES `wateringhole`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `permId`
    FOREIGN KEY (`permId`)
    REFERENCES `wateringhole`.`permissions` (`idpermissions`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`hangoutPermission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`hangoutPermission` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`hangoutPermission` (
  `idhangoutPermission` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `#allowed` INT NULL COMMENT '',
  PRIMARY KEY (`idhangoutPermission`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`hangoutPeers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`hangoutPeers` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`hangoutPeers` (
  `idhangoutPeers` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `hangoutId` INT NULL COMMENT '',
  `userId` INT NULL COMMENT '',
  `hangoutPermersion` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idhangoutPeers`)  COMMENT '',
  INDEX `userID_idx` (`userId` ASC)  COMMENT '',
  CONSTRAINT `userID_peers`
    FOREIGN KEY (`userId`)
    REFERENCES `wateringhole`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`hangout`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`hangout` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`hangout` (
  `hangoutName` VARCHAR(45) NULL COMMENT '',
  `hangoutPerm` INT NULL COMMENT '',
  `#inHangout` INT NULL COMMENT '',
  `hangoutPeers` INT NULL COMMENT '',
  `status` TINYINT(1) NULL COMMENT '',
  `hangoutPeers_idhangoutPeers` INT NOT NULL COMMENT '',
  INDEX `fk_hangout_hangoutPermission_idx` (`hangoutPerm` ASC)  COMMENT '',
  INDEX `fk_hangout_hangoutPeers1_idx` (`hangoutPeers` ASC)  COMMENT '',
  CONSTRAINT `fk_hangout_hangoutPermission`
    FOREIGN KEY (`hangoutPerm`)
    REFERENCES `wateringhole`.`hangoutPermission` (`idhangoutPermission`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_hangout_hangoutPeers1`
    FOREIGN KEY (`hangoutPeers`)
    REFERENCES `wateringhole`.`hangoutPeers` (`idhangoutPeers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`friends`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`friends` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`friends` (
  `idfriends` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `status` TINYINT(1) NULL COMMENT '',
  `userId` INT NULL COMMENT '',
  `friendsAtEvents` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idfriends`)  COMMENT '',
  INDEX `fk_friends_users1_idx` (`userId` ASC)  COMMENT '',
  CONSTRAINT `fk_friends_users1`
    FOREIGN KEY (`userId`)
    REFERENCES `wateringhole`.`users` (`idusers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wateringhole`.`events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wateringhole`.`events` ;

CREATE TABLE IF NOT EXISTS `wateringhole`.`events` (
  `idevents` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `eventName` VARCHAR(45) NULL COMMENT '',
  `longitude` FLOAT NULL COMMENT '',
  `latitude` FLOAT NULL COMMENT '',
  `numParticipating` INT NULL COMMENT '',
  `description` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idevents`)  COMMENT '')
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;